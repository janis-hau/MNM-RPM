@use "sass:math";

body
{
    background-color: #222222;
    margin: 0;
    padding: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100vh;
}

.rpm
{
    --rpm-primary: #ff003b;
    --rpm-border: #9c9c9c;
    --rpm-border2: #414141;
    --rpm-background: #181818;
    --rpm-marker: #828282;
    --rpm-carbon-pattern-size: 1.5rem;
    --rpm-carbon-pattern-size-half: calc(var(--rpm-carbon-pattern-size) / 2);

    box-sizing: border-box;
    color: var(--rpm-border);
    container-type: inline-size;
    font-family: monospace;

    transition: filter ease 700ms, transform ease 100ms;
    max-width: 50rem;
    position: relative;
    overflow: hidden;
    will-change: transform;

    *,
    *::after,
    *::before
    {
        box-sizing: inherit;
    }

    a
    {
        color: var(--rpm-primary);
    }

    &.rpm--off
    {

        .rpm__needle,
        .rpm__marker
        {
            box-shadow: none;
            filter: saturate(0.6);

            &::after
            {
                box-shadow: none;
            }
        }

        .rpm__needle
        {
            transform: translate(-50%, -100%) rotate(-135deg) !important;
        }

        .rpm__glass
        {
            background-color: rgba(0, 0, 0, 0.5);
            backdrop-filter: blur(2px);
        }
    }

    .rpm__carbon-fiber
    {
        border-radius: inherit;
        background-color: rgb(32, 32, 32);
        background-image:
            linear-gradient(to right, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0) 20%, rgba(0, 0, 0, 0) 80%, rgba(0, 0, 0, 0)),
            linear-gradient(45deg, black 25%, transparent 25%, transparent 75%, black 75%, black),
            linear-gradient(45deg, black 25%, transparent 25%, transparent 75%, black 75%, black),
            linear-gradient(to bottom, rgb(8, 8, 8), rgb(32, 32, 32));
        background-size: 100% 100%, var(--rpm-carbon-pattern-size) var(--rpm-carbon-pattern-size), var(--rpm-carbon-pattern-size) var(--rpm-carbon-pattern-size), var(--rpm-carbon-pattern-size) var(--rpm-carbon-pattern-size-half);
        background-position: 0px 0px, 0px 0px, var(--rpm-carbon-pattern-size-half) var(--rpm-carbon-pattern-size-half), 0px 0px;
        box-shadow: inset 0cqh 7cqh 10cqh 10cqh rgba(0, 0, 0, 0.75);
        transform: rotate(7deg);
    }

    &,
    .rpm__dial,
    .rpm__marks,
    .rpm__needle-ground,
    .rpm__needle-base
    {
        aspect-ratio: 1/1;
    }

    .rpm__dial,
    .rpm__marks,
    .rpm__marker,
    .rpm__marker::after,
    .rpm__needle,
    .rpm__needle-ground,
    .rpm__needle-base,
    .rpm__loadText,
    .rpm__glass
    {
        position: absolute;
    }

    .rpm__dial,
    .rpm__marks,
    .rpm__marker,
    .rpm__needle,
    .rpm__needle-ground,
    .rpm__needle-base,
    .rpm__glass
    {
        top: 50%;
        left: 50%;
    }

    &,
    .rpm__needle-ground,
    .rpm__needle-base,
    .rpm__dial,
    .rpm__marks,
    .rpm__glass
    {
        border-radius: 50%;
    }

    .rpm__dial,
    .rpm__marks,
    .rpm__glass
    {
        transform-origin: 50% 50%;
    }

    .rpm__carbon-fiber,
    .rpm__glass
    {
        height: 100%;
    }

    &,
    .carbon-fiber,
    .rpm__marks,
    .rpm__marker::after,
    .rpm__glass
    {
        width: 100%;
    }

    .rpm__needle-ground,
    .rpm__needle-base,
    .rpm__dial,
    .rpm__glass
    {
        transform: translate(-50%, -50%);
    }

    .rpm__dial
    {
        /* Styles for the dial */
        width: 96%;
        border: 0.5cqh solid var(--rpm-border2);
        border-bottom: 1cqh solid transparent;
    }

    .rpm__marks
    {
        /* Styles for the markers */
        transform: translate(-50%, -50.3%) scale(0.9);
        overflow: hidden;
    }

    .rpm__marker
    {
        display: flex;
        font-size: 187%;
        height: 51%;
        justify-content: center;
        line-height: 1.05;
        padding-left: 0;
        transform: translate(-50%, -100%);
        transform-origin: 50% 100%;
        white-space: nowrap;
        width: 3.5%;

        &::after
        {
            aspect-ratio: 1 / 0.6;
            background-color: var(--rpm-marker);
            content: "";
            display: block;
            top: 0;
        }
    }

    .rpm__marker--highlight
    {
        padding-top: 15%;
        transition: box-shadow ease 100ms;

        &::after
        {
            aspect-ratio: 1 / 3.75;
        }
    }

    .rpm__marker--primary
    {
        color: var(--rpm-primary);
        text-shadow: 0 0 1cqh var(--rpm-primary);

        &::after
        {
            background-color: var(--rpm-primary);
            box-shadow: 0 0 2cqh 0 var(--rpm-primary);
        }
    }

    $total_degrees: 248; // Total span from -124 to +124 degrees
    $divisions: 45; // Total number of markers

    @function leading-zeros($number, $length)
    {
        $number-str: "#{math.div($number, 1)}"; // Convert number to string

        @while str-length($number-str) < $length
        {
            $number-str: '0' + $number-str; // Prepend leading zeros
        }

        @return $number-str;
    }

    @for $i from 0 through $divisions
    {
        // Calculate the actual rotation for each marker
        $rotation: -124 + math.div($total-degrees, $divisions) * $i;

        // Generate the class name with leading zeros based on the current index
        $class-suffix: leading-zeros($i * 200, 4); // Adjustment needed here

        // Create a class for each marker
        .rpm__marker--#{$class-suffix}
        {
            transform: translate(-50%, -100%) rotate($rotation + deg);
        }
    }

    .rpm__needle-ground,
    .rpm__needle-base
    {
        background-color: var(--rpm-background);
    }

    .rpm__needle
    {
        // animation: animloader93 2s linear infinite alternate;
        background-color: var(--rpm-primary);
        border-top-right-radius: 100%;
        border-top-left-radius: 100%;
        box-shadow: 0 0 2cqh 0 var(--rpm-primary);
        height: 40%;
        width: 1.25%;
        transform: translate(-50%, -100%) rotate(-124deg);
        transform-origin: 50% 100%;
        transition: transform 100ms ease, box-shadow 100ms ease;
        will-change: transform;
        z-index: 1020;
    }

    .rpm__needle-ground
    {
        outline: 0.25cqh solid rgba(var(--rpm-border), 0.75);
        outline-offset: 2cqh;
        width: 13%;
        z-index: 1010;
    }

    .rpm__needle-base
    {
        box-shadow: inset 0cqh 0cqh 3cqh 1cqh rgba(0, 0, 0, 0.75);
        width: 8%;
        z-index: 1030;
    }

    .rpm__glass
    {
        background-image: radial-gradient(ellipse at 50% 10%, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0) 60%);
        backdrop-filter: blur(0);
        box-shadow: inset 0 0 10cqh rgba(255, 255, 255, 0.05), inset 0 0 10cqh rgba(255, 255, 255, 0.075);
        filter: blur(1px);
        mix-blend-mode: lighten;
        opacity: 0.6;
        pointer-events: none;
        transition: opacity 0.5s ease, filter 0.5s ease, background-color 200ms ease, backdrop-filter 200ms ease;
        z-index: 1050;
    }

    .rpm__loadText
    {
        bottom: 4cqh;
        left: 0;
        right: 0;
        text-align: center;
        text-align-last: center;
    }

    @container (max-width: 500px)
    {
        .rpm__marker
        {
            font-size: 1.1cqh !important;
        }

        .rpm__dial
        {
            border-width: 0.2cqh !important;
            border-bottom-width: 0.2cqh !important;
        }
    }
}

@keyframes animloader93
{
    0%
    {
        transform: translate(-100%, -100%) rotate(-124deg);
    }

    10%
    {
        transform: translate(-100%, -100%) rotate(-40deg);
    }

    20%,
    45%,
    35%
    {
        transform: translate(-100%, -100%) rotate(-10deg);
    }

    40%,
    30%
    {
        transform: translate(-100%, -100%) rotate(-30deg);
    }

    50%,
    60%
    {
        transform: translate(-100%, -100%) rotate(20deg);
    }

    55%,
    65%,
    75%
    {
        transform: translate(-100%, -100%) rotate(40deg);
    }

    70%
    {
        transform: translate(-100%, -100%) rotate(45deg);
    }

    85%,
    90%
    {
        transform: translate(-100%, -100%) rotate(50deg);
    }

    95%
    {
        transform: translate(-100%, -100%) rotate(85deg);
    }

    100%,
    93%
    {
        transform: translate(-100%, -100%) rotate(80deg);
    }
}